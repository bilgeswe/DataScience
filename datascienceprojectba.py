# -*- coding: utf-8 -*-
"""DataScienceProjectBA

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fRG8l_CI5MQxmbfR7rK43KGdhgKYIAku

# Yeni Bölüm
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

file_path = "/content/framingham.csv"
data = pd.read_csv(file_path)

correlation_matrix = data.corr()

plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", vmin=-1, vmax=1)
plt.title("Correlation Heatmap")
plt.show()

from google.colab import drive
drive.mount('/content/drive')

"""# Yeni Bölüm"""

import statsmodels.api as sm
import numpy as np

# Data for regression analysis
age_means = [35, 45, 55, 65]  # Approximate midpoints of the age groups
bmi_means = [24.5, 25.11, 25.95, 26.13]  # Mean BMI for each group

# Convert to arrays
X = np.array(age_means)
y = np.array(bmi_means)

# Add a constant for the regression (intercept term)
X_with_const = sm.add_constant(X)

# Fit the linear regression model
model = sm.OLS(y, X_with_const)
results = model.fit()

# Extract regression results
slope = results.params[1]  # Coefficient for age
intercept = results.params[0]  # Intercept
p_value = results.pvalues[1]  # P-value for the slope
r_squared = results.rsquared  # R-squared value

# Display the regression summary
summary = results.summary()

(slope, intercept, p_value, r_squared, summary)


import matplotlib.pyplot as plt


plt.scatter(X, y, color="blue", label="Data Points")
plt.plot(X, results.predict(X_with_const), color="red", label="Regression Line")
plt.xlabel("Age")
plt.ylabel("BMI")
plt.legend()
plt.show()